{{- if .Values.cleanup.enable }}

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: jobs.daemonset.darkowlzz.space
spec:
  group: daemonset.darkowlzz.space
  names:
    kind: Job
    plural: jobs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            args:
              items:
                type: string
              type: array
            image:
              type: string
            mountPath:
              type: string
          required:
          - image
          - args
          - mountPath
          type: object
        status:
          properties:
            completed:
              type: string
            phase:
              type: string
          required:
          - completed
          - phase
          type: object
  version: v1beta1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: daemonset-job-sa
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: daemonset-job-terminator-sa
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-rolebinding
  labels:
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: daemonset-job-sa
  namespace: {{ .Release.Namespace }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-sidecar-rolebinding
  labels:
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: daemonset-job-terminator-sa
  namespace: {{ .Release.Namespace }}

---

apiVersion: v1
kind: Service
metadata:
  name: controller-manager-service
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
    app: {{ template "storageoscluster-operator.name" . }}
    chart: {{ template "storageoscluster-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: controller-manager-service
  template:
    metadata:
      labels:
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      serviceAccount: daemonset-job-sa
      containers:
      - command:
        - /root/manager
        image: "{{ .Values.cleanup.manager.repository }}:{{ .Values.cleanup.manager.tag }}"
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      - name: job-terminator
        image: "{{ .Values.cleanup.terminator.repository }}:{{ .Values.cleanup.terminator.tag }}"
        env:
        - name: NAMESPACE
          value: "default"
        - name: POD_LABEL_SELECTOR
          value: "daemonset-job=true"
        - name: TERMINATION_WORD
          value: "done"
        - name: TICKER_DURATION
          value: "10" 
      terminationGracePeriodSeconds: 10

{{- end }}
